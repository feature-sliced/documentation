"use strict";(self.webpackChunk_feature_sliced_documentation=self.webpackChunk_feature_sliced_documentation||[]).push([["6555"],{3711:function(i,a,n){n.r(a),n.d(a,{frontMatter:()=>e,toc:()=>t,default:()=>c,metadata:()=>l,assets:()=>d,contentTitle:()=>o});var l=JSON.parse('{"id":"get-started/overview","title":"Qisqacha","description":"Feature-Sliced Design (FSD) bu front-end ilovalarining tuzilishini shakllantirish uchun arxitektura metodologiyasi. Oddiy qilib aytganda, bu kodni tartibga solish uchun qoidalar va konvensiyalar to\'plami. Bu metodologiyaning asosiy maqsadi - loyihani yanada tushunarli va o\'zgaruvchan biznes talablariga moslashuvchan qilishdir.","source":"@site/i18n/uz/docusaurus-plugin-content-docs/current/get-started/overview.mdx","sourceDirName":"get-started","slug":"/get-started/overview","permalink":"/documentation/uz/docs/get-started/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/feature-sliced/documentation/edit/master/i18n/uz/docusaurus-plugin-content-docs/current/get-started/overview.mdx","tags":[],"version":"current","lastUpdatedAt":1758985998000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","next":{"title":"Tutorial","permalink":"/documentation/uz/docs/get-started/tutorial"}}'),s=n(5813),r=n(6436);let e={sidebar_position:1},o="Qisqacha",d={},t=[{value:"Menga to&#39;g&#39;ri keladimi?",id:"is-it-right-for-me",level:2},{value:"Asosiy misollar",id:"basic-example",level:2},{value:"Tushunchalar",id:"concepts",level:2},{value:"Layerlar",id:"layers",level:3},{value:"Slicelar",id:"slices",level:3},{value:"Segmentlar",id:"segments",level:3},{value:"Afzalliklar",id:"advantages",level:2},{value:"Bosqichma-bosqich joriy etish",id:"incremental-adoption",level:2},{value:"Keyingi qadamlar",id:"next-steps",level:2}];function h(i){let a={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...i.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"qisqacha",children:"Qisqacha"})}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Feature-Sliced Design"})," (FSD) bu front-end ilovalarining tuzilishini shakllantirish uchun arxitektura metodologiyasi. Oddiy qilib aytganda, bu kodni tartibga solish uchun qoidalar va konvensiyalar to'plami. Bu metodologiyaning asosiy maqsadi - loyihani yanada tushunarli va o'zgaruvchan biznes talablariga moslashuvchan qilishdir."]}),"\n",(0,s.jsxs)(a.p,{children:["FSD nafaqat konvensiyalar to'plami, balki vositalar to'plamini ham o'z ichiga oladi. Bizda ",(0,s.jsx)(a.a,{href:"https://github.com/feature-sliced/steiger",children:"linter"})," sizning loyihangizning arxitekturasini tekshirish uchun, ",(0,s.jsx)(a.a,{href:"https://github.com/feature-sliced/awesome?tab=readme-ov-file#tools",children:"papka generatorlari"})," CLI yoki IDE lar orqali, shuningdek, ko'plab ",(0,s.jsx)(a.a,{href:"/examples",children:"misollar"})," jamlanmasiga ega."]}),"\n",(0,s.jsx)(a.h2,{id:"is-it-right-for-me",children:"Menga to'g'ri keladimi?"}),"\n",(0,s.jsx)(a.p,{children:"FSD har qanday hajmdagi jamoalarda joriy qilinishi mumkin. Sizga to'g'ri keladi agar:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Siz ",(0,s.jsx)(a.strong,{children:"frontend"})," qilayotgan bo'lsangiz (veb, mobil, kompyuter dasturlari, h.k.)"]}),"\n",(0,s.jsxs)(a.li,{children:["Siz ",(0,s.jsx)(a.strong,{children:"ilova"})," qurayotgan bo'lsangiz, kutubxona emas"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Shu bilan birga, bu yerda qaysi dasturlash tili, UI(foydalanuvchi interfeysi) freymvorki, yoki holat boshqaruvchisi(state manager)ni ishlatish bo'yicha hech qanday cheklov yo'q. Shuningdek, FSD ni bosqichma-bosqich joriy qilishingiz, monorepo(yagona repozitoriya)larda ishlatishingiz va ilovangizni modullarga bo'lib, FSD ni ularning har birida alohida amalga oshirishingiz mumkin."}),"\n",(0,s.jsxs)(a.p,{children:["Agar sizda allaqachon arxitektura mavjud bo\u2018lsa va FSDga o\u2018tishni o\u2018ylayotgan bo\u2018lsangiz, avvalo joriy arxitektura jamoangizga muammo tug\u2018dirayotganiga ishonch hosil qiling. Masalan, agar loyihangiz juda katta va o\u2018zaro juda bog\u2018lanib ketgan bo\u2018lsa, bu yangi xususiyatlarni samarali joriy etishni qiyinlashtirishi mumkin. Yoki jamoangizga ko\u2018plab yangi a\u2019zolar qo\u2018shilishi kutilayotgan bo\u2018lsa, FSDga o\u2018tish foydali bo\u2018lishi mumkin. Agar hozirgi arxitektura yaxshi ishlayotgan bo\u2018lsa, ehtimol uni o\u2018zgartirishga hojat yo\u2018q. Ammo agar migratsiya qilishga qaror qilsangiz, yo\u2018riqnoma uchun ",(0,s.jsx)(a.a,{href:"/docs/guides/migration/from-custom",children:"Migratsiya"})," sahifasini ko'rib chiqishingiz mumkin."]}),"\n",(0,s.jsx)(a.h2,{id:"basic-example",children:"Asosiy misollar"}),"\n",(0,s.jsx)(a.p,{children:"Bu yerda FSD qo'llanilgan oddiy loyiha:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} app"})}),"\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} pages"})}),"\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} shared"})}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["Bu yuqori darajadagi papkalar ular ",(0,s.jsx)(a.em,{children:"layerlar"})," deyiladi. Keling chuqurroq qaraymiz:"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"\u{1F4C2} app"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} routes"})}),"\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} analytics"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"\u{1F4C2} pages"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} home"})}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"\u{1F4C2} article-reader"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} ui"})}),"\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} api"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} settings"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"\u{1F4C2} shared"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} ui"})}),"\n",(0,s.jsx)(a.li,{children:(0,s.jsx)(a.code,{children:"\u{1F4C1} api"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.code,{children:"\u{1F4C2} pages"})," ichidagi papkalar ",(0,s.jsx)(a.em,{children:"slice(bo'lak)lar"})," deyiladi. Ular layer ni domenlar bo'yicha bo'lishadi(bu holatda, sahifalar bo'yicha)"]}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.code,{children:"\u{1F4C2} app"}),", ",(0,s.jsx)(a.code,{children:"\u{1F4C2} shared"}),", va ",(0,s.jsx)(a.code,{children:"\u{1F4C2} pages/article-reader"})," ichidagilar ",(0,s.jsx)(a.em,{children:"segment(bo'lim)lar"})," deyiladi, va ular slicelar(yoki layerlar), ya'ni kodning vazifasiga qarab ajratiladi."]}),"\n",(0,s.jsx)(a.h2,{id:"concepts",children:"Tushunchalar"}),"\n",(0,s.jsx)(a.p,{children:"Layerlar, slicelar va segmentlar quyidagi iyerarxiyani hosil qiladi:"}),"\n",(0,s.jsxs)("figure",{children:[(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"FSD konsepsiyalari iyearxiyasi, quyida tasvirlangan",src:n(5031).A+"",width:"1355",height:"754"})}),(0,s.jsxs)("figcaption",{style:{fontStyle:"italic",fontSize:"0.9em"},children:[(0,s.jsx)("p",{children:'Tepadagi rasmda: uchta ustunlar, chapdan o\'ngga qarab mos ravishda "Layerlar", "Slicelar" va "Segmentlar" deb belgilangan.'}),(0,s.jsx)("p",{children:'"Layers" ustuni yuqoridan pastga qarab joylashtirilgan etti bo\u2018limni o\u2018z ichiga oladi: "app", "processes", "pages", "widgets", "features", "entities" va "shared". "Processes" bo\u2018limi ustidan chizib tashlangan. "Entities" bo\u2018limi ikkinchi ustun \u2014 "Slicelar" bilan bog\u2018langan bo\u2018lib, bu ikkinchi ustunning "entities" tarkibida ekanligini bildiradi.'}),(0,s.jsx)("p",{children:'"Slices" ustuni yuqoridan pastga qarab joylashtirilgan uch bo\u2018limni o\u2018z ichiga oladi: "user", "post" va "comment". "Post" bo\u2018limi uchinchi ustun \u2014 "Segmentlar" bilan bog\u2018langan bo\u2018lib, bu uchinchi ustunning "post" tarkibida ekanligini bildiradi.'}),(0,s.jsx)("p",{children:'"Segments" ustuni yuqoridan pastga qarab joylashtirilgan uchta bo\'limni o\'z ichiga oladi: "ui", "model" va "api".'})]})]}),"\n",(0,s.jsx)(a.h3,{id:"layers",children:"Layerlar"}),"\n",(0,s.jsx)(a.p,{children:"Layerlar barcha FSD loyihalarida standartlashtirilgan. Siz ularning barchasidan foydalanishingiz shart emas, lekin ularning nomlari muhim. Hozirda yettita layer mavjud(tepadan pastga qarab):"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"App"})," \u2014 Ilovaning ishlashi uchun zarur bo'lgan hamma narsa \u2014 marshrutlash(routing), dastur boshlanish nuqtasi(entrypoint), global stillar, provayderlar."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Processes"})," (eskirgan) \u2014 Murakkab sahifalararo ssenariylar(ya'ni foydalanuvchi bir sahifada amal bajarsa, boshqa sahifada natija ko\u2018rinishi yoki turli sahifalar o\u2018rtasida state(holat) uzatilishi)."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Pages"})," \u2014 To\u2018liq sahifalar yoki ichma-ich marshrutlashdagi(routing) sahifaning katta qismlari."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Widgets"})," \u2014 Katta, mustaqil funksionallik yoki UI bo\u2018laklari, odatda butun bir foydalanish holatini ta\u2019minlaydi."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Features"})," \u2014 ",(0,s.jsx)(a.em,{children:"Qayta foydalaniladigan"})," butun mahsulot xususiyatlarining implementatsiyalari, ya\u2019ni foydalanuvchiga biznes qiymatini keltiradigan harakatlar."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Entities"})," \u2014 Loyihada ishlaydigan biznes obyekti, masalan, ",(0,s.jsx)(a.code,{children:"user"})," yoki ",(0,s.jsx)(a.code,{children:"product"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Shared"})," \u2014 Loyihaning yoki biznesning aniq xususiyatlariga bog\u2018liq bo\u2018lmagan, lekin qayta ishlatiladigan funksionallik."]}),"\n"]}),"\n",(0,s.jsxs)(a.admonition,{type:"warning",children:[(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"App"})," va ",(0,s.jsx)(a.strong,{children:"Shared"})," layerlari boshqa layerlardan farqli o\u2018laroq slicelarga ega emas va to\u2018g\u2018ridan-to\u2018g\u2018ri segmentlarga bo\u2018linadi."]}),(0,s.jsxs)(a.p,{children:["Biroq, boshqa barcha layerlar \u2014 ",(0,s.jsx)(a.strong,{children:"Entities"}),", ",(0,s.jsx)(a.strong,{children:"Features"}),", ",(0,s.jsx)(a.strong,{children:"Widgets"})," va ",(0,s.jsx)(a.strong,{children:"Pages"})," avval slicelar yaratishni talab qiladi, shundan keyingina ularning ichida segments yaratiladi."]})]}),"\n",(0,s.jsx)(a.p,{children:"Layerlar bilan ishlashning asosiy tamoyili shundaki, bitta layerdagi modullar faqat o\u2018zidan quyi joylashgan layerlardagi modullarni bilishi va ulardan import qilishi mumkin."}),"\n",(0,s.jsx)(a.h3,{id:"slices",children:"Slicelar"}),"\n",(0,s.jsx)(a.p,{children:"Keyingi tushuncha slicelar, ya\u2019ni kodni biznes domenlari bo\u2018yicha bo\u2018lish usuli. Ularning nomlarini o\u2018zingiz tanlashingiz va xohlaganingizcha ko\u2018paytirishingiz mumkin. Slices kod bazangizni yanada tushunarli qiladi, chunki bir-biriga bog\u2018liq modullar bir joyda saqlanadi."}),"\n",(0,s.jsxs)(a.p,{children:["Slicelar bir xil layer ichida boshqa slicelardan foydalana olmaydi. Bu esa yuqori cohesion(",(0,s.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Cohesion_(computer_science)",children:"uyg'unlik"}),") va low coupling(",(0,s.jsx)(a.a,{href:"https://en.wikipedia.org/wiki/Loose_coupling",children:"past bog\u2018liqlik"}),") tamoyillariga rioya qilishga yordam beradi."]}),"\n",(0,s.jsx)(a.h3,{id:"segments",children:"Segmentlar"}),"\n",(0,s.jsx)(a.p,{children:"Slicelar, shuningdek, App va Shared layerlari segmentlardan tashkil topadi. Segmentlar kodni uning maqsadiga qarab guruhlaydi. Segment nomlari standart bilan cheklanmagan, ammo eng keng tarqalgan maqsadlar uchun bir nechta an\u2019anaviy nomlar mavjud:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"ui"})," \u2014 UI(foydalanuvchi interfeysi) ni aks ettiruvchi barcha narsalar: UI(foydalanuvchi interfeysi) komponentlar, sana formatlagichlar, stillar va boshqalar."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"api"})," \u2014 backend bilan munosabat: so'rov funksiyalari, ma'lumot turlari, mapperlar va boshqalar."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"model"})," \u2014 ma'lumot modeli: sxemalar, interfeyslar, holat saqlovchi obyektlar (stores) va biznes mantiq(business logic)."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"lib"})," \u2014 Ushbu sliceda joylashgan boshqa modullarga kerak kutubxona kodi."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.code,{children:"config"})," \u2014 konfiguratsiya fayllari va feature flags(yoqib o'chiriladigan xususiyat bayroqlari)"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Odatda, ushbu segmentlar ko\u2018pchilik layerlar uchun yetarli bo\u2018ladi. Siz faqat Shared yoki App layerlarida o\u2018z segmentlaringizni yaratishingiz mumkin, lekin bu qat\u2019iy qoida emas."}),"\n",(0,s.jsx)(a.h2,{id:"advantages",children:"Afzalliklar"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Bir xillik"}),(0,s.jsx)(a.br,{}),"\n","Tuzilma standartlashtirilganligi sababli loyihalar yanada bir xil ko'rinishga ega bo\u2018ladi, bu esa jamoaga yangi a\u2019zolarni jalb qilish jarayonini osonlashtiradi."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"O'zgarishlar va refaktoring(kodni qayta tuzish) jarayonida barqarorlik"}),(0,s.jsx)(a.br,{}),"\n","Bitta layerdagi modul boshqa shu layerdagi yoki undan yuqoridagi modullardan foydalana olmaydi.",(0,s.jsx)(a.br,{}),"\n","Bu esa ilovaning boshqa qismlariga kutilmagan ta\u2019sir ko\u2018rsatmasdan izolyatsiyalangan o\u2018zgarishlar kiritish imkonini beradi."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Qayta foydalaniladigan mantiq(logic)ni tartibli boshqarish"}),(0,s.jsx)(a.br,{}),"\n","Layerga qarab, kodni keng miqyosda qayta ishlatish yoki faqat ma'lum bir joyda ishlatish mumkin.",(0,s.jsx)(a.br,{}),"\n","Bu esa ",(0,s.jsx)(a.strong,{children:"DRY"})," tamoyilini ushlab turish bilan birga, loyihaning qulayligini ham saqlab qolishga yordam beradi."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Biznes va foydalanuvchi ehtiyojlariga yo\u2018naltirilganlik."}),(0,s.jsx)(a.br,{}),"\n","Ilova biznes domenlarga bo\u2018lingan va nomlashda biznesga oid terminologiya(business language) dan foydalanish tavsiya etiladi, bu esa sizga loyiha tarkibidagi boshqa qismlarni to\u2018liq tushunmasdan ham mahsulot ustida ishlash imkonini beradi."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"incremental-adoption",children:"Bosqichma-bosqich joriy etish"}),"\n",(0,s.jsx)(a.p,{children:"Agar mavjud kod bazangizni FSD ga o'tkazmoqchi bo'lsangiz, quyidagi strategiyani tavsiya qilamiz. Biz buni bizning tajribamizda foydali deb topdik."}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Avval App va Shared layerlarini modul-ma-modul shakllantirib, mustahkam asos yarating."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Mavjud UI komponentlarini Widgets va Pages ga umumiy tartibda joylashtiring, hatto ular FSD qoidalarini buzadigan bog\u2018liqliklarga ega bo\u2018lsa ham."}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:"Import qoidabuzarliklarini bosqichma-bosqich tuzatishni boshlang va shu bilan birga Entities, ehtimol Features ham ajratib chiqing."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Refaktoring jarayonida yoki loyihaning faqat ayrim qismlarini o\u2018zgartirayotganda yangi yirik Entities qo\u2018shmaslik tavsiya etiladi."}),"\n",(0,s.jsx)(a.h2,{id:"next-steps",children:"Keyingi qadamlar"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"FSD haqida chuqur tushuncha hosil qilmoqchimisiz?"})," ",(0,s.jsx)(a.a,{href:"/docs/get-started/tutorial",children:"Bu yerda"}),"."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Misollar bilan o'rganishni afzal ko'rasizmi?"})," Bizda juda ko'plab ",(0,s.jsx)(a.a,{href:"/examples",children:"Misollar"})," bo'limi mavjud."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Savolingiz bormi?"})," Bizning ",(0,s.jsx)(a.a,{href:"https://t.me/feature_sliced",children:"Telegram chat"})," ga qo'shiling va yordam oling."]}),"\n"]})]})}function c(i={}){let{wrapper:a}={...(0,r.R)(),...i.components};return a?(0,s.jsx)(a,{...i,children:(0,s.jsx)(h,{...i})}):h(i)}},5031:function(i,a,n){n.d(a,{A:()=>l});let l=n.p+"assets/images/visual_schema-e826067f573946613dcdc76e3f585082.jpg"},6436:function(i,a,n){n.d(a,{R:()=>e,x:()=>o});var l=n(9729);let s={},r=l.createContext(s);function e(i){let a=l.useContext(r);return l.useMemo(function(){return"function"==typeof i?i(a):{...a,...i}},[a,i])}function o(i){let a;return a=i.disableParentContext?"function"==typeof i.components?i.components(s):i.components||s:e(i.components),l.createElement(r.Provider,{value:a},i.children)}}}]);